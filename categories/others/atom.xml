<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Others on ipfans's Blog</title><link>https://www.4async.com/categories/others/</link><description>Recent content in Others on ipfans's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 19 Feb 2021 16:27:00 +0000</lastBuildDate><atom:link href="https://www.4async.com/categories/others/atom.xml" rel="self" type="application/rss+xml"/><item><title>切换至Hugo引擎驱动</title><link>https://www.4async.com/2021/02/2021-02-19-move-to-hugo/</link><pubDate>Fri, 19 Feb 2021 16:27:00 +0000</pubDate><guid>https://www.4async.com/2021/02/2021-02-19-move-to-hugo/</guid><description>其实很早之前就希望切换至Hugo引擎驱动博客了，但是体验下来一圈，最大的感觉是Hugo的主题都很一言难尽&amp;hellip;所以拖着一直没有切换。结果今天想发布新文章时突然发现我无法正常编译Hexo的项目了，于是干脆趁此良机切换至Hugo引擎了。
本站目前使用的主题是stack主题，相当简洁，推荐想切换至Hugo的小伙伴了解一下。
另外提供一下快速进行Github Action部署的方案（私有化仓库代码/公有化仓库网站展示），PERSONAL_TOKEN是个人token，需要从个人设置页面里获取填写至仓库Secrets中：
name: github pages on: push: branches: - master jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;latest&amp;#39; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.PERSONAL_TOKEN }} external_repository: 你的用户名/你的仓库 publish_dir: ./public cname: 你的域名</description></item><item><title>漫谈代码安全：也来聊一聊AntD这档子事</title><link>https://www.4async.com/2018/12/2018-12-25-scm-security/</link><pubDate>Tue, 25 Dec 2018 23:20:00 +0000</pubDate><guid>https://www.4async.com/2018/12/2018-12-25-scm-security/</guid><description>没想到今年突然有动力还能写一篇。可能来自于两个方面，有些东西需要整理，另外有一个事情我是感觉到很诧异的。今天技术圈最火的事情当属AntDesign彩蛋事件了（以下简称AntD），很不幸的是，本司也是本次受害者之一。
考虑到AntD是一个使用十分广泛并且关注度非常高的国内项目，并且有阿里支付宝的背书效应，这一次我想影响的会在两个方面：一个是阿里开源本身的信用，一个是开源项目在国内的推广。当然，我们确实在引入AntD方面确实太过草率：我其实关注AntD了大概一年时间，考虑到issue情况和项目开发活跃度情况，要求团队引入此框架希望可以提升开发效率，没想到相关的项目1-2个月就出现了这种事情，真是令人实在痛心。
这件事情也暴露出来，我们以前在使用开源项目时，太过信任
另外，作为最后的一个建议，我们希望如果大家以后开源项目，如果做不到，请不要说自己是__企业级项目__，因为一般也就是放在自己企业里面用，这跟企业级项目是两个概念。至少我们具体到AntD这个项目上，这个项目无论代码开发和管控上，都是算不上的。</description></item><item><title>配置新域名</title><link>https://www.4async.com/2018/05/2018-05-03-new-domain/</link><pubDate>Thu, 03 May 2018 11:20:00 +0000</pubDate><guid>https://www.4async.com/2018/05/2018-05-03-new-domain/</guid><description>感谢Github Page终于支持了Let&amp;rsquo;s Encrypt的HTTPS，很久之前购买的域名终于可以再次发光发热了。
新的域名： https://www.4async.com
值得注意的是，在新的域名生效之后，HTTPS需要等待1-2个小时才能启用。</description></item><item><title>树莓派无界面配置WiFi</title><link>https://www.4async.com/2018/04/2018-04-20-setup-wifi-raspberrypi-headless/</link><pubDate>Fri, 20 Apr 2018 17:30:00 +0000</pubDate><guid>https://www.4async.com/2018/04/2018-04-20-setup-wifi-raspberrypi-headless/</guid><description>树莓派支持命令行下配置WiFi连接，可以通过编辑 /etc/wpa_supplicant/wpa_supplicant.conf 文件配置对应的WiFi配置。具体的内容可以使用 wpa_passphrase 工具生成对应的配置信息，附加到该文件结尾即可。
假设我存在 SSID 为 testing 密码为 testingPassword 的WiFi网络，我可以使用 wpa_passphrase 生成对应的配置字符串：
$ wpa_passphrase &amp;quot;testing&amp;quot; &amp;quot;testingPassword&amp;quot; network={ ssid=&amp;quot;testing&amp;quot; #psk=&amp;quot;testingPassword&amp;quot; psk=131e1e221f6e06e3911a2d11ff2fac9182665c004de85300f9cac208a6a80531 } 当然你可以在 `psk` 填写原始的密码。 不过在某些极限环境下，我们有可能便装出门，未配置网线等工具，这个时候只有未加入过的WiFi网络，这样如何处理呢？ 这种方式与开启SSH方式类似，在制作的SD卡根目录下，新增/修改对应的 `wpa_supplicant.conf` 文件，添加对应的信息即可。 *注意，该文件包含默认头部信息不能缺少。如Raspbian 20180418版本完整配置为：* ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1
network={ ssid=&amp;ldquo;testing&amp;rdquo; #psk=&amp;ldquo;testingPassword&amp;rdquo; psk=131e1e221f6e06e3911a2d11ff2fac9182665c004de85300f9cac208a6a80531 }</description></item></channel></rss>